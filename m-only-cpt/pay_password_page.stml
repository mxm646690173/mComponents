<template>
	<view class="page flex-center" @click="back()">
		<view class="password-box" @click="stop">
			<text class="width-100p margin-top-19 title-style">{{this.props['title']}}</text>
			<view class="input-box disflex-v-center" @click="openKeyBord">
				<view class="item-style flex-center">
					<view v-show="passwordContent.length > 0" class="blackTips"></view>
				</view>
				<view class="item-style flex-center">
					<view v-show="passwordContent.length > 1" class="blackTips"></view>
				</view>
				<view class="item-style flex-center">
					<view v-show="passwordContent.length > 2" class="blackTips"></view>
				</view>
				<view class="item-style flex-center">
					<view v-show="passwordContent.length > 3" class="blackTips"></view>
				</view>
				<view class="item-style flex-center">
					<view v-show="passwordContent.length > 4" class="blackTips"></view>
				</view>
				<view class="flex-1 flex-center height-100p">
					<view v-show="passwordContent.length > 5" class="blackTips"></view>
				</view>
			</view>
			<view class="footer disflex-v-center">
				<button class="disflex-v-center button-style right-line" onclick="forget">{{this.props['left-text']}}</button>
				<button class="flex-center button-style no-line" onclick="confirm">{{this.props['right-text']}}</button>
			</view>
			<input id="password" type="text" class="input-style" autofocus keyboard-type="number" confirm-type="done"
				v-model="passwordContent" maxlength="6" onconfirm="confirm" />
		</view>
	</view>
</template>

<script>
export default {
	name: 'pay-password-page',
	data() {
		return {
			passwordContent: ''
		}
	},
	methods: {
		confirm(e) {
			e.stopPropagation ? e.stopPropagation() : e.cancelBubble = true;
			this.fire('right-button',{
				passWord:this.data.passwordContent
			})
		},
		forget(e) {
			e.stopPropagation ? e.stopPropagation() : e.cancelBubble = true;
			this.fire('left-button')
		},
		openKeyBord(e) {
			e.stopPropagation ? e.stopPropagation() : e.cancelBubble = true;
			document.getElementById('password').focus();
		},
		back() {
			this.fire('closeFrame', {})
		},
		stop(e) {
			e.stopPropagation ? e.stopPropagation() : e.cancelBubble = true;
		}
	},
}
</script>

<style>
.margin-top-19 {
	margin-top: 19px;
}
.width-100p {
	width: 100%;
}
.disflex-v-center {
	flex-flow: row;
	align-items: center;
	justify-content: flex-start;
}
.flex-center {
	align-items: center;
	justify-content: center;
	text-align: center;
}
.blackTips {
	width: 5px;
	height: 5px;
	border-radius: 50%;
	background: #000;
}
.input-style {
	position: absolute;
	top: -10000px;
	z-index: -1;
	left: 20px;
	color: #fff;
}
.no-line {
	border-width: 0;
}
.right-line {
	height: 100%;
	border-right: 0.5px solid #eeeeee;
	border-top-width: 0;
	border-bottom-width: 0;
	border-left-width: 0;
}
.button-style {
	font-size: 13px;
	font-family: PingFangSC-Regular, PingFang SC;
	font-weight: 400;
	color: #000000;
	line-height: 13px;
	background: #fff;
	flex: 1;
}
.footer {
	height: 47px;
	width: 100%;
	position: absolute;
	bottom: 0;
	border-top: 0.5px solid #eeeeee;
}
.item-style {
	height: 100%;
	border-right: 0.5px solid #d8d8d8;
	flex: 1;
}
.input-box {
	width: 202px;
	height: 34px;
	border: 0.5px solid #d8d8d8;
	border-radius: 10px;
	margin-left: 24px;
	margin-top: 14px;
}
.title-style {
	text-align: center;
	font-size: 15px;
	font-family: PingFangSC-Regular, PingFang SC;
	font-weight: 400;
	color: #333333;
	line-height: 15px;
}
.password-box {
	position: relative;
	width: 250px;
	height: 155px;
	background: #ffffff;
	border-radius: 10px;
}
.page {
	height: 100%;
	width: 100%;
}
</style>